library ieee;
use ieee.numeric_std.all;
use ieee.std_logic_1164.all;


entity AtariMod is	
	port (
		CLK100      : in std_logic;

		-- Connections to GTIA pins
		ATARI_CLK    : in std_logic;
		ATARI_SYNC   : in std_logic;
		ATARI_LUM    : in std_logic_vector(3 downto 0);
		ATARI_COL    : in std_logic;
		ATARI_PAL    : out std_logic;

		-- Output to DVID interface ---
		DVID_CLK    : out std_logic;
		DVID_SYNC   : out std_logic;
		DVID_RGB    : out std_logic_vector(11 downto 0)
	);	
end entity;


architecture immediate of AtariMod is
	
--   component PLL_200 is
--	port (
--		refclk   : in  std_logic := '0'; --  refclk.clk
--		rst      : in  std_logic := '0'; --   reset.reset
--		outclk_0 : out std_logic         -- outclk0.clk
--	);
--  end component;
	
   component Atari2DVideo is
	port (
		CLK100: in std_logic;	
		SWITCH: in STD_LOGIC_VECTOR(9 downto 0);
		BUTTON: in STD_LOGIC_VECTOR(3 downto 0);
				
		-- Connections to GTIA pins
		ATARI_CLK    : in std_logic;
		ATARI_SYNC   : in std_logic;
		ATARI_LUM    : in std_logic_vector(3 downto 0);
		ATARI_COL    : in std_logic;
		ATARI_PAL    : out std_logic;
	
		-- Output to DVID interface ---
		DVID_CLK    : out std_logic;
		DVID_SYNC   : out std_logic;
		DVID_RGB    : out std_logic_vector(11 downto 0)
	);	
   end component;
	
begin		
		
	part1: Atari2DVideo	port map (
		CLK100, "0000000000", "0000", 
		ATARI_CLK, ATARI_SYNC, ATARI_LUM, ATARI_COL, ATARI_PAL,
		DVID_CLK, DVID_SYNC, DVID_RGB);

--  process (CLK100) 
--
--  variable counter : integer range 0 to 4095;
--    
--  begin
--	if rising_edge(CLK100) then
--		counter := counter+1;
--	end if;
--	
--	
--	ATARI_PAL <= '0';
--	
--	if counter mod 1 = 0 then
--		DVID_CLK <= '0';
--		DVID_SYNC <= '0';
--	else
--		DVID_CLK <= '1';
--		DVID_SYNC <= '1';
--	end if;
--
--	DVID_RGB <= std_logic_vector(to_unsigned(counter,12));
--  end process;

end immediate;

